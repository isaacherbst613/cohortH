{"version":3,"file":"index.bundle.js","mappings":";;;;;;;;;;;;;;;AAAyC;AACzC;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kDAAU,EAAE,kDAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAU;AAC9B;AACA;AACA;;;;;;;;;;;;;;;AClCyC;AACzC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAU;AACzC,+BAA+B,kDAAU;AACzC,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D,kDAAU,EAAE,kDAAU;AACjF;AACA,wBAAwB,uBAAuB;AAC/C,iFAAiF,kDAAU,EAAE,kDAAU;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAU;AAC/B;AACA;AACA,qBAAqB,kDAAU;AAC/B;AACA;AACA,qBAAqB,kDAAU;AAC/B;AACA;AACA,qBAAqB,kDAAU;AAC/B;AACA;AACA;AACA,6CAA6C,kDAAU,sCAAsC,kDAAU;AACvG;AACA;AACA,cAAc;AACd,6BAA6B,8BAA8B,kDAAU;AACrE,iDAAiD,kDAAU,IAAI;AAC/D,6BAA6B,+BAA+B,kDAAU;AACtE,kDAAkD,kDAAU,IAAI;AAChE;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;;;;;;;;;;;;;;;;;;AClGO;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;;ACfiC;AACA;AAC8B;AAChB;AACK;AACA;AACpD;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAW;AAC1B;AACA,gBAAgB,iDAAY;AAC5B;AACA,gBAAgB,iDAAY;AAC5B;AACA;AACA;AACA,wCAAwC,8CAAM,0BAA0B,8CAAM,IAAI,kDAAU;AAC5F,0CAA0C,8CAAM,2BAA2B,8CAAM,IAAI,kDAAU;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAK;AAC9B;AACA,6BAA6B,iDAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAkB;AAC9B,YAAY,mDAAW;AACvB;AACA,oCAAoC,kBAAkB,kDAAU,uCAAuC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,kDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://87-wp/./src/Apple.js","webpack://87-wp/./src/Snake.js","webpack://87-wp/./src/consts.js","webpack://87-wp/webpack/bootstrap","webpack://87-wp/webpack/runtime/define property getters","webpack://87-wp/webpack/runtime/global","webpack://87-wp/webpack/runtime/hasOwnProperty shorthand","webpack://87-wp/webpack/runtime/make namespace object","webpack://87-wp/webpack/runtime/publicPath","webpack://87-wp/./src/index.js"],"sourcesContent":["import { THING_SIZE } from \"./consts.js\";\r\n\r\n\r\nexport default class Apple {\r\n    constructor(game, appleImg) {\r\n        this.canvas = game.canvas;\r\n        this.ctx = game.ctx;\r\n        this.snake = game.snake;\r\n        this.move();\r\n        this.appleImg = appleImg;\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.drawImage(this.appleImg, this.x, this.y, THING_SIZE, THING_SIZE);\r\n    }\r\n\r\n    move() {\r\n        this.x = this.getRandomNumber(0, this.canvas.width - 1);\r\n        this.y = this.getRandomNumber(0, this.canvas.height - 1);\r\n\r\n        //if the apple is on the snake, re-move it\r\n        for (let i = 0; i < this.snake.parts.length; i++) {\r\n            if (this.x === this.snake.parts[i].x && this.y === this.snake.parts[i].y) {\r\n                this.move();\r\n            }\r\n        }\r\n        this.draw();\r\n    }\r\n\r\n    getRandomNumber(min, max) {\r\n        let r = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        r = r - r % THING_SIZE;\r\n        return r;\r\n    }\r\n}","import { THING_SIZE } from \"./consts.js\";\r\n\r\nexport default class Snake {\r\n    constructor(game, snakeHead, snakeBody) {\r\n        this.game = game;\r\n        this.canvas = game.canvas;\r\n        this.ctx = game.ctx;\r\n        let midX =  this.canvas.height/2;\r\n        let midY = this.canvas.width/2;\r\n        this.x = midX - midX % THING_SIZE;\r\n        this.y = midY - midY % THING_SIZE;\r\n        this.parts = [{ x: this.x, y: this.y }];\r\n        this.snakeHead = snakeHead;\r\n        this.snakeBody = snakeBody;\r\n        this.direction = 'ArrowRight';\r\n        this.backwards = 'ArrowLeft'\r\n\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.key !== this.backwards) {\r\n                switch (event.key) {\r\n                    case 'ArrowUp':\r\n                        this.backwards = 'ArrowDown';\r\n                        this.direction = event.key;\r\n                        break;\r\n                    case 'ArrowDown':\r\n                        this.backwards = 'ArrowUp';\r\n                        this.direction = event.key;\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                        this.backwards = 'ArrowRight';\r\n                        this.direction = event.key;\r\n                        break;\r\n                    case 'ArrowRight':\r\n                        this.backwards = 'ArrowLeft';\r\n                        this.direction = event.key;\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.drawImage(this.snakeHead, this.x, this.y, THING_SIZE, THING_SIZE);\r\n\r\n        for (let i = 0; i < this.parts.length; i++) {\r\n            this.ctx.drawImage(this.snakeBody, this.parts[i].x, this.parts[i].y, THING_SIZE, THING_SIZE);\r\n\r\n            //while your redrawing anyway, you can use this to check if you have hit yourself\r\n            if (this.x === this.parts[i].x && this.y === this.parts[i].y) {\r\n                this.game.gameOver = true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    move() {\r\n        let x = this.x;\r\n        let y = this.y;\r\n\r\n        switch (this.direction) {\r\n            case 'ArrowUp':\r\n                y -= THING_SIZE;\r\n                break;\r\n            case 'ArrowDown':\r\n                y += THING_SIZE;\r\n                break;\r\n            case 'ArrowLeft':\r\n                x -= THING_SIZE;\r\n                break;\r\n            case 'ArrowRight':\r\n                x += THING_SIZE;\r\n                break;\r\n        }\r\n\r\n        if (x < 0 || x > this.canvas.width - THING_SIZE || y < 0 || y > this.canvas.height - THING_SIZE) {\r\n            if (this.game.level === 3) {\r\n                this.game.gameOver = true;\r\n            } else {\r\n                if (x < 0) { this.x = (this.canvas.width - THING_SIZE); }\r\n                else if (x > this.canvas.width - THING_SIZE) { this.x = 0; }\r\n                if (y < 0) { this.y = (this.canvas.height - THING_SIZE); }\r\n                else if (y > this.canvas.height - THING_SIZE) { this.y = 0; }\r\n            }\r\n        } else {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n\r\n\r\n        this.draw();\r\n    }\r\n    moveBody() {\r\n        this.parts.pop();\r\n        this.parts.unshift({ x: this.x, y: this.y });\r\n    }\r\n\r\n}\r\n","export const THING_SIZE = 30;\r\nexport const border = 2;\r\nexport const crunch = new Audio('./items/crunch.mp3');\r\nexport const crash = new Audio('./items/crash.mp3');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import  Snake  from './Snake.js';\r\nimport  Apple  from './Apple.js';\r\nimport { THING_SIZE, crunch, crash, border} from './consts.js';\r\nimport  redAppleImg  from '../items/apple.png';\r\nimport  snakeHeadImg  from '../items/snakeHead.png';\r\nimport  snakeBodyImg  from '../items/snakeBody.png';\r\n\r\n\r\nconst canvas = document.getElementById('canvas');\r\n\r\nconst appleImg = new Image();\r\nappleImg.src = redAppleImg;\r\nconst snakeHead = new Image();\r\nsnakeHead.src = snakeHeadImg;\r\nconst snakeBody = new Image();\r\nsnakeBody.src = snakeBodyImg;\r\n\r\n\r\nfunction resizeCanvas() {\r\n    canvas.width = (window.innerWidth - border) - ((window.innerWidth - border) % THING_SIZE);\r\n    canvas.height = (window.innerHeight - border) - ((window.innerHeight - border) % THING_SIZE);\r\n}\r\n\r\nwindow.addEventListener('resize', resizeCanvas);\r\nresizeCanvas();\r\n\r\nclass Game {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        this.speed = 250;\r\n        this.score = 0;\r\n        this.level = 1;\r\n        this.levelUP = false;\r\n        this.gameOver = false;\r\n        this.ctx = canvas.getContext('2d');\r\n        this.snake = new Snake(this, snakeHead, snakeBody);\r\n        appleImg.onload = () => {\r\n            this.apple = new Apple(this, appleImg);\r\n          };\r\n        this.gameLoop = this.gameLoop.bind(this);\r\n    }\r\n\r\n    gameLoop() {\r\n        this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.ctx.font = '25px Arial';\r\n        this.ctx.fillText(`Score: ${this.score}`, 10, 20);\r\n        this.ctx.font = '20px Arial';\r\n        this.ctx.fillText(`level: ${this.level}`, 10, 50);\r\n\r\n        if (this.levelUP) {\r\n            this.ctx.font = '50px Arial';\r\n            this.ctx.strokeText('Speed UP!!!', canvas.width / 2 - 100, canvas.height / 2);\r\n            if (this.level === 3) {\r\n                this.ctx.strokeText('NOTICE BORDERS!!', canvas.width / 2 - 180, canvas.height / 2 + 100);\r\n            }\r\n            setTimeout(() => {\r\n                this.levelUP = false;\r\n            }, 3000);\r\n        }\r\n        if (this.level >= 3) {\r\n            canvas.style.border = '1px solid black';\r\n        }\r\n\r\n        //if snake eats the food\r\n        if (this.snake.x === this.apple.x && this.snake.y === this.apple.y) {\r\n            this.score++;\r\n            if (this.score % 5 === 0) {\r\n                this.level++;\r\n                this.speed = this.speed * 0.85;\r\n                this.levelUP = true;\r\n            }\r\n\r\n            crunch.currentTime = 0;\r\n            crunch.play();\r\n            this.apple.move();\r\n            this.snake.parts.push({ x: this.snake.x + THING_SIZE * this.snake.length, y: this.snake.y });\r\n        }\r\n\r\n\r\n        this.apple.draw();\r\n        this.snake.move(this.ctx, this.apple);\r\n        this.snake.moveBody();\r\n        if (!this.gameOver) {\r\n            setTimeout(this.gameLoop, this.speed);\r\n        } else {\r\n            crash.play();\r\n            this.ctx.font = '50px Arial';\r\n            this.ctx.fillStyle = 'red';\r\n            this.ctx.fillText('Game Over', canvas.width / 2 - 100, canvas.height / 2);\r\n        }\r\n    }\r\n\r\n    run(){\r\n        setTimeout(this.gameLoop, this.speed);\r\n    }\r\n\r\n}\r\n\r\nsnakeHead.onload = () => {\r\n    const game = new Game(canvas);\r\n    game.run();\r\n  };\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}